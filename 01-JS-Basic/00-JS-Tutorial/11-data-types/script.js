//Data Types in JavaScript

/*
JavaScript primitive data types:

1.String   ex:"selvamanan"
2.Number   ex:  1.25,25
3.Boolean  ex:  True,False
4.Null   ex: empty value or no value
5.Undefined  ex:a declared variable without a value
6.Symbols  E6 A unique value that can be generated by Symbol constructor
7.bigint  es2020

JavaScript non-primitive data types or complex data type (Object References)

Array
Object Literals
Date

*/

//1.primitive Data Type is not modify and mutable 
let word = 'JavaScript';
word[0]="m";
console.log(word);//Javascript

let numOne = 3
let numTwo = 3
console.log(numOne == numTwo)      // true

let js = 'JavaScript'
let py = 'Python'
console.log(js == py)             //false 

let lightOn = true
let lightOff = false
console.log(lightOn == lightOff) // false

//2.Non-Primitive data type
//Non-primitive data types are modifiable or mutable

let nums = [1, 2, 3]
nums[0] = 10
console.log(nums)  // [10, 2, 3]

//As you can see, an array, which is a non-primitive data type is mutable. Non-primitive data types cannot be compared by value. Even if two non-primitive data types have the same properties and values, they are not strictly equal.

let nums = [1, 2, 3]
let numbers = [1, 2, 3]
console.log(nums == numbers)  // false

let userOne = {
name:'Asabeneh',
role:'teaching',
country:'Finland'
}

let userTwo = {
name:'Asabeneh',
role:'teaching',
country:'Finland'
}
console.log(userOne == userTwo) // false

//Rule of thumb, we do not compare non-primitive data types. Do not compare arrays, functions, or objects. Non-primitive values are referred to as reference types, because they are being compared by reference instead of value. Two objects are only strictly equal if they refer to the same underlying object.

let nums = [1, 2, 3]
let numbers1 = nums

console.log(nums == numbers1)  // true

let userOne1 = {
name:'Asabeneh',
role:'teaching',
country:'Finland'
}

let userTwo1 = userOne1

console.log(userOne1 == userTwo1)  // true

//1.Numbers:

var age = 23; //Number Literal
var gpay = 34.6;
console.log(age); //23
console.log(typeof age);//Number
console.log(gpay); //34.6

var octNumber = 0255;
var hexNum = 0xff;
console.log(octNumber); //173
console.log(hexNum); //255

var amt = 1.1e6;
console.log(amt); //1100000

let price = 200.0; // interpreted as an integer 200
console.log(price);

//js storage min max value storage
console.log(Number.MAX_VALUE); //1.7976931348623157e+308
console.log(Number.MIN_VALUE); //5e-324

//Infinity
var mayBeInfinity = Number.MAX_VALUE + Number.MAX_VALUE;
var negativeInfinity = -10 / 0;
console.log(mayBeInfinity); //infinity
console.log(negativeInfinity); //-Infinity

//NaN
console.log('a' / 2); // NaN;
console.log(NaN / 2); // NaN
console.log(NaN == NaN); // false

//2.String --->'',"",` `

var fName = 'selva'; //string literal
var lName = "manan";
let phrase = `can embed another ${lName}`;
console.log(fName); //selva
console.log(lName); //manan
console.log(phrase);

// use \ to escape the single quote (')
let message = "I'm also a valid string";

//concat +
let str = 'JavaScript';
str = str + ' String';

//
let s = 'JavaScript';
s[0] = 'j';
console.log(s); //JavaScript

//3.Boolean

let inProgress = true; //Boolean Literal
let completed = false;

console.log(typeof completed); // boolean


let isGreater = 4 > 1;
console.log( isGreater );


//example boolean:
console.log(Boolean('Hi')); // true
console.log(Boolean('')); // false

console.log(Boolean(20)); // true
console.log(Boolean(Infinity)); // true
console.log(Boolean(0)); // false

console.log(Boolean({ foo: 100 })); // true on non-empty object
console.log(Boolean(null)); // false

//4.null
/*
var h1 = null;
console.log(h1);//null
console.log(typeof h1); // object
*/

//5.undefined
/*
var weird;
console.log(weird); //undefined
*/

//6.Symbol
//ES6 2015
//unique value generate

let s1 = Symbol('hello');//fgdfgbhdfjbghdfb12344
console.log(s1); //symbol()

console.log(Symbol() == Symbol()); // false

const first = Symbol(); //symbol
console.log(first);

const second = Symbol();//hbjdbvsvshjchsfvg
console.log(second); //symbol

console.log(first == second); //false

//7.The bigint type
let pageView = 9007199254740991n;
console.log(typeof pageView); // 'bigint'

//Reference Data Types
/*
var courses = ['C', 'C++', 'Java']; //Array
console.log(typeof courses); //object

var student = {
  name: 'Joes', //Object
  age: 22,
};
console.log(typeof student); //object

var d = new Date(); //Date function
console.log(d);
console.log(typeof d); //object
*/

